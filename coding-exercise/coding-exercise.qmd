---
title: "R Coding Exercise"
---

This exercise explores the relationship of life expectancy with child mortality and population in African countries using the ‘gapminder’dataset found in R's 'dslabs' package. It is noteworthy that once the 'dslabs' package is installed and loaded, the dataset is available immediately for analysis. The analysis leverages the comprehensive capabilities of the ''tidyverse' package for data manipulation, visualization and analysis. 

R's help function provides insightful guidance on various datasets, including 'gapminder'. For instance, executing 'help(gapminder)' in R prompts '??gapminder', directing users to detailed information about this dataset.

```{r}
#load dslabs package
library("dslabs")
#look at help file for gapminder data
help(gapminder)
#load tidyverse pacakge
library(tidyverse)

```

As exhibited in the help window, the 'gapminder' dataset contains health and income outcomes across 184 countries from 1960 to 2016, details of outcomes listed below. 

1. country
2. year
3. infant_mortality. Infant deaths per 1000.
4. life_expectancy. Life expectancy in years.
5. fertility. Average number of children per woman.
6. population. Country population.
7. gpd. GDP according to World Bankdev.
8. continent
9. region. Geographical region.

The str function pulls the structure of the actual data. As we can see below, the 'gapminder' data has 10545 observation and 9 variables. There are five numerical variables, infant_mortality, life_expectancy, fertility, population and gdp; three factor variables, country, continent and region and one. The year is stored as an integer data type.

```{r}
#get an overview of data structure
str(gapminder)

```
The summary(gapminder) provides statistical overview. For numerical columns, it presents minimum, maximum, mean, median, quartiles  and missing values. For categorical or factor columns, it provides a count of the number of occurrences of each level. For example, there are 2907 observations related to the continent of Africa, 2052 related to Americas, 2679 related to Asia, 2223 related to Europe and 684 related to Ocenia. 

```{r}
#get a summary of data
summary(gapminder)

```
It is important to find out the class or type of an object in R before applying any functions and operations. Determining the object's class with 'class(gapminder)' confirms that 'gapminder' is a 'data.frame', indicative of its tabular structure in R.

```{r}
#determine the type of object gapminder is
class(gapminder)
```
In the next step of analysis, a subset named 'africadata' is created, containing only observations related to African countries.

```{r}
#Assigning only the African countries to a new object/variable called africadata
africadata <- gapminder[gapminder$continent == "Africa", ]
```

Examining 'africadata' with str(africadata) shows a reduction to 2907 observations. However, summary(africadata) still includes other continent categories, with zero counts. This peculiarity arises because R retains factor levels in subsets even when no observations exist for certain categories.

```{r}
#Running str for africadata
str(africadata)
```
```{r}
#Summary of africadata
summary(africadata)
```
Further analysis involves creating two subsets from 'africadata': 'africa_infant_life' with 'infant_mortality' and 'life_expectancy', and 'africa_pop_life' with 'population' and 'life_expectancy'. 

```{r}
#Creating africa_infant_life which is a subset of africadata containing only 'infant_mortality' and 'life_expectancy'

africa_infant_life <- africadata[,c("infant_mortality", "life_expectancy")]
```

The structures and summaries reveal africa_infant_life has two columns, 2907 observations, and 226 missing values in infant_mortality.

```{r}
#Running str for africa_infant_life
str(africa_infant_life)
```
```{r}
#Summary of africa_infant_life
summary(africa_infant_life)
```
```{r}
#Creating africa_pop_life which is a subset of africadata containing only population and life_expectancy

africa_pop_life <- africadata[,c("population", "life_expectancy")]

```

Likewise, the str function of africa_pop_life showed that this object also has 2907 observations and two columns. The summary function presented various quartile levels.

```{r}
#Running str for africa_pop_life
str(africa_pop_life)
```

```{r}
#Summary of africa_pop_life
summary(africa_pop_life)
```
Plotting life expectancy against infant mortality in 'africa_infant_life' displays an expected negative correlation.

```{r}
#Plotting expectancy as a function of infant mortality
p1 <- africa_infant_life %>% ggplot(aes(x=infant_mortality, y=life_expectancy)) + geom_point() + geom_smooth(method='lm')
plot(p1)

```
Plotting life expectancy against the log of population in 'africa_pop_life' reveals intriguing streaks. This pattern exists because africadata contains multiple years of data on population and life expectancy for multiple countries in Africa. Each 'streak' might be hinting at a positive correlation between life expectancy and population within individual country over multiple years.

```{r}
#Plotting life expectancy as a function of log of population for the africa_pop_life
p2 <- africa_pop_life %>% ggplot(aes(x=log(population), y=life_expectancy)) + geom_point() + geom_smooth(method='lm')
plot(p2)

```
Next step is to inspect if this pattern persists even when only one year's data with least missing values is visualized. As noticed in the summary of africadata, 226 values are missing for infant_mortality in this object. To find years with least missing values for infant mortality, following code is run. The result shows that in the object 'africadata', the values for infant_mortality is missing from 1960 to 1981 and again in 2016.     
     
```{r}
#Codes to explore which years have missing data for infant mortality

missing_infmort_years <- africadata %>%
  filter(is.na(infant_mortality)) %>%
  select(year) %>%
  distinct() %>%
  arrange(year)

print(missing_infmort_years)


```
The year 2000 is identified as a year without missing values to create a subset 'africadata_2000' from the object 'africadata'. This new subset includes only the data for the Year 2000. 

```{r}
#Creating africadata_2000 which is a subset of africadata containing data for the year 2000 only. 

africadata_2000 <- africadata %>% filter(year == 2000)
```

The results of the str function on africadata_2000 reveals that this object contains only 51 observations and 9 variables.

```{r}
#Running str for africadata_2000
str(africadata_2000)
```
```{r}
#Running summary for africadata_2000
summary(africadata_2000)
```
Plotting life_expectancy as a function of infant_mortality for 'africadata_2000' again revealed a negative correlation between infant mortality and life expectancy.

```{r}
#Plotting life expectancy as a function of infant mortality for the africadata_2000.

p3 <- africadata_2000 %>% ggplot(aes(x=infant_mortality, y=life_expectancy)) + geom_point() + geom_smooth(method='lm')
plot(p3)

```

Likewise, plotting life_expectancy as a function of log of population for 'africadata_2000' still produces streaks following the pattern of the aficadata plot.

```{r}
#Plotting life expectancy as a function of log of population for the africadata_2000

p4 <- africadata_2000 %>% ggplot(aes(x=log(population), y=life_expectancy)) + geom_point() + geom_smooth(method='lm')
plot(p2)

```


Next step is fitting of some simple models using africadata_2000. First a linear model (fit1) is fitted using life expectancy as outcome and infant mortality as predictor.

Based on the p-value of fit1 which is less than 0.001, infant_mortality is a significant predictor of life expectancy in the African countries. IN the African countries, one infant mortality in one thousand infants decreases the life expectancy by approximately 0.19 years on an average.

```{r}
fit1 <- lm(life_expectancy ~ infant_mortality, africadata_2000)  

```

```{r}
#Printing the results of the linear model fit1
summary(fit1)
```
Subsequent step is fitting of linear model (fit2) using life expectancy as outcome and population as predictor. 

The p-value (0.616) of population in the model fit2 is larger than 0.1. Hence, population is not a significant predictor of life expectancy in the African countries. 


```{r}
fit2 <- lm(life_expectancy ~ population, africadata_2000)  

```

```{r}
#Printing the results of the linear model fit2
summary(fit2)
```









































































