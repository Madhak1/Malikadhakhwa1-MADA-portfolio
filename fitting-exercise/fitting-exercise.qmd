---
title: "fitting-exercise"
---

In this exercise, a model is fitted to a data set (mavoglurant_A2121_nmpk) from the R package nlmixr2data 
First, required packages are installed and loaded.

```{r}
#| message: false
#| warning: false
library(readxl) #for loading Excel files
library(dplyr) #for data processing/cleaning
library(tidyr) #for data processing/cleaning
library(skimr) #for nice visualization of data 
library(here) #to set paths
library(ggplot2) # for plots
library(gtsummary)# for summary tables
library(patchwork) #for combine plots
library(tidymodels)
```


Data is loaded

```{r}
# path to data using here function
data_location <- here::here("fitting-exercise","Mavoglurant_A2121_nmpk.csv")
rawdata <- read.csv(data_location)
```


Checking the data

```{r}
head(rawdata)
skimr::skim(rawdata)
```


Next, a plot of DV over time stratified by Dose is created to have a visual inspection of the data. A line for each individual is created by grouping the observations by ID. .

```{r}
#Defining a color palette for the chart

custom_colors <- c("darkblue", "red", "green" )

#The 'group' aesthetic is used to connect observations by ID in order to show a line for each individual  

ggplot(rawdata, aes (x=TIME, y = DV, group = ID, color=as.factor(DOSE))) + 
  geom_line() +
  labs(title = "DV over Time by DOSE", x = "Time", y = "DV", color="DOSE") +
  theme_minimal()+
  scale_color_manual(values = custom_colors)

  
```

The lines are not smooth. As informed in the topic, the reason for this could be that some individuals potentially have received the drug more than once, which is indicated by having both entries with OCC=1 and OCC=2. However, in absence of information on the OCC values, the analysis looks into the data set with OCC=1 only. A subset data frame is created keeping only those observations for which OCC has a value of '1'

```{r}

#Creating a sub set of data including observations with OCC=1
dataclean_step1 <- rawdata %>% 
                    dplyr::filter(OCC==1)
skimr::skim(dataclean_step1)

```
Again, a plot of DV over time stratified by Dose is created. The plot looks smoother now.

```{r}
#Defining a color palette for the chart
custom_colors <- c("darkblue", "red", "green" )

#The 'group' aesthetic is used to connect observations by ID in order to show a line for each individual  
ggplot(dataclean_step1, aes (x=TIME, y = DV, group = ID, color=as.factor(DOSE))) + 
  geom_line() +
  labs(title = "DV over Time by DOSE", x = "Time", y = "DV", color="DOSE") +
  theme_minimal()+
  scale_color_manual(values = custom_colors)

  
```

Next, two subsets data frame are created. In the first subset, observations wherein TIME=0 are dropped followed by computation of a variable Y which sums up the DV values for each individual based on ID. This resulted into a data frame of size 120 x 2 containing columns for ID and Y. In the second subset, only those observations are kept for which TIME=0. This second sub set has a size of 120 x 17.  Finally these two data subsets are joined to create a new data frame of size 120 x 18.  

```{r}
#Creating a subset excluding the observations with TIME=0
datasubset_1 <- dataclean_step1 %>% dplyr::filter(TIME != 0) %>%
  #Grouping by ID
   dplyr::group_by(ID) %>%
  #Creating variable Y, which is sum of the DV variables by ID
      dplyr::summarize(Y=sum(DV, na.rm = TRUE), .groups = "drop")

#Creating a subset including only observations with TIME=0 
datasubset_2 <- dataclean_step1 %>% 
                    dplyr::filter(TIME==0)

#Inner joining the two subsets to create a new data frame 
data_joined <- inner_join(datasubset_1, datasubset_2, by = "ID")
skimr::skim(data_joined)

```

A final data set is created by keeping only the variables Y, DOSE, AGE, SEX, RACE, WT, HT. DOSE, SEX and RACE are coded as factors.

```{r}
#sub set of data_joined keeping only the required variables
data_final <- data_joined %>%
  select(Y, DOSE, AGE, SEX, RACE, WT, HT) %>%
  #converting SEX, RACE and DOSE as factors
  mutate(SEX = as.factor(SEX), RACE=as.factor(RACE))

skimr::skim(data_final)
```

The data summary shows that SEX has 2 levels and RACE has 4 levels. The level 88 of RACE has 8 observations and 7 has 2 observations. In absence of the codebook, it is unclear the reason of naming those levels with numerical values distant from the other two names with top counts. This will be kept in the data for further analyses.

**Exploratory Data Analysis**

A table is created for descriptive analysis by Dose.

```{r}
# Creating a table
table1 <- tbl_summary(
  data_final,
  by = DOSE, # Stratify summary by DOSE
  type = list(
    DOSE ~ "categorical", #Specifying DOSE as categorical
    SEX ~ "categorical",  #Specifying SES as categorical
    RACE ~ "categorical", #Specifying RACE as categorical
    Y ~ "continuous2",
    AGE ~ "continuous2",
    WT ~ "continuous2",
    HT ~ "continuous2"
  ),
  statistic = list(
    all_continuous() ~ c("{mean} ({sd})", "{min}, {max}"), # Statistics for continuous variables
    all_categorical() ~ "{n} ({p}%)"), # Statistics for categorical variables
  missing = "no" # Option to exclude missing data in summary
)

# Display the table
table1

```

A visual inspection of distribution of continuous variables is performed by plotting histograms. 

```{r}
#| message: false
# Plotting histograms for all continuous variables in a grid

plot1 <-
  data_final %>%
  select(Y, AGE, WT, HT) %>%
  pivot_longer(everything()) %>%
  mutate(name = factor(name, levels = c("Y", "AGE", "WT", "HT"))) %>%  #Keeps the order of plot
  ggplot(aes(x = value, fill = name)) +
  geom_histogram(alpha = 0.5, color="black") +
  facet_wrap(~name, scales = "free") +
  scale_fill_manual(values = c("Y" = "lightgreen", "AGE" = "dodgerblue", "WT" = "grey", "HT" = "salmon")) +
  theme_minimal()
plot1

#Saving the figure in the folder
plot1_file <- here("fitting-exercise", "hist_plots.png")
ggsave(filename = plot1_file, plot=plot1, bg="white")

```

Bar charts are plotted for visual inspection of distribution of factor variables. The bar chart indicates smaller representation of Dose 37.5, Sex level of 2 and Races 7 and 88 in the data. 

```{r}
#creating a combined plot for DOSE, SEX and RACE. For this plot DOSE is treated as a factor as it has only 3 levels.
plot2 <- 
  data_final %>%
  mutate(DOSE = as.factor(DOSE)) %>% # Convert DOSE to factor here
  select(DOSE, SEX, RACE) %>%
  pivot_longer(everything(), names_to = "name", values_to = "value") %>%
  mutate(name = factor(name, levels = c("DOSE", "SEX", "RACE"))) %>%
  ggplot(aes(x = value, fill = name)) +
  geom_bar(alpha = 0.5, color = "black") +
  facet_wrap(~name, scales = "free") +
  scale_fill_manual(values = c("DOSE" = "lightgreen", "SEX" = "salmon", "RACE" = "skyblue"))
plot2

#Saving the figure in the folder
plot2_file <- here("fitting-exercise", "factor_vars_plots.png")
ggsave(filename = plot2_file, plot=plot2, bg="white")

```

Box plot for distribution of Y by Dose is created.The box plot suggests outlier values of Y for doses 25 and 50. 

```{r}
plot3 <- data_final %>%
  mutate(DOSE = as.factor(DOSE)) %>% # Converting DOSE to factor only for the plot
  ggplot(aes(x = DOSE, y = Y, fill = DOSE)) + 
  geom_boxplot() + 
  labs(title = "Distribution of Y by DOSE", x = "DOSE", y = "Y") +
  theme_minimal()

plot3

#Saving the figure in the folder
plot3_file <- here("fitting-exercise", "Y_Dose.png")
ggsave(filename = plot3_file, plot=plot3, bg="white")
```

Next, Scatter plot is created for Y by Age stratified by Dose. For doses 37.5 and 50, the plot indicates a linear increase in Y as Age increases. For the dose of 25, such relationship is negative.  

```{r}
#| message: false
plot4 <- data_final %>%
  mutate(DOSE = as.factor(DOSE)) %>% # Convert DOSE to factor here
  ggplot(aes(x = AGE, y = Y, group = DOSE, col = DOSE)) +
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) + # Add a linear regression line
  scale_color_viridis_d(option = "plasma", end = .7)+
  labs(title = "Scatterplot of Y vs. AGE", x = "Age", y = "Total Drug (Y)") +
  theme_minimal()

plot4

#Saving the figure in the folder
plot4_file <- here("fitting-exercise", "Y_Age_Dose.png")
ggsave(filename = plot4_file, plot=plot4, bg="white")

```

Scatter plot is created for Y by HT stratified by Dose. For all the doses the plot indicates a decline in Y as HT increases.

```{r}
#| message: false
plot5 <- data_final %>%
  mutate(DOSE = as.factor(DOSE)) %>% # Convert DOSE to factor here
  ggplot(aes(x = HT, y = Y, group = DOSE, col = DOSE)) +
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) + # Add a linear regression line
  scale_color_viridis_d(option = "plasma", end = .7)+
  labs(title = "Scatterplot of Y vs. HT", x = "HT", y = "Total Drug (Y)") +
  theme_minimal()

plot5

#Saving the figure in the folder
plot5_file <- here("fitting-exercise", "Y_HT_Dose.png")
ggsave(filename = plot5_file, plot=plot5, bg="white")

```

Scatter plot is created for Y by WT stratified by Dose. As with Y and HT, a decline in Y is observed as WT decreased for all levels of Dose. 

```{r}
#| message: false
plot6<-data_final %>%
  mutate(DOSE = as.factor(DOSE)) %>% # Convert DOSE to factor here
  ggplot(aes(x = WT, y = Y, group = DOSE, col = DOSE)) +
  geom_point() + 
  geom_smooth(method = lm, se = FALSE) + # Add a linear regression line
  scale_color_viridis_d(option = "plasma", end = .7)+
  labs(title = "Scatterplot of Y vs. WT", x = "WT", y = "Total Drug (Y)") +
  theme_minimal()

plot6

#Saving the figure in the folder
plot6_file <- here("fitting-exercise", "Y_WT_Dose.png")
ggsave(filename = plot6_file, plot=plot6, bg="white")

```

Visual inspection of correlation between the continuous variables is performed. The scatterplot matrix indicates a linear correlation between WT and HT.
```{r}
# Using the pairs function for selected variables
plot7 <- pairs(data_final[, c("Y", "AGE", "WT", "HT")], 
      main = "Pairwise Scatterplot Matrix")

plot7

#Saving the figure in the folder
plot7_file <- here("fitting-exercise", "Pair_matrix.png")
ggsave(filename = plot7_file, plot=plot6, bg="white")
```
 

**MODEL FITTING**

**Linear Model**

A linear model is fitted to the continuous outcome (Y) using the main predictor of interest DOSE with the help of the recommended website https://www.tidymodels.org/start/models/.

```{r}
#using linear regression function from tidymodels to regress Y on DOSE
#The default for linear_reg() is "lm" for OLS
lm_dose <- linear_reg() %>% set_engine("lm") %>% fit(Y ~ DOSE, data = data_final)
#Using tidy for better format of the result table
tidy(lm_dose)

```
The estimates suggests a positive relationship between the Y and DOSE indicating a unit increase in DOSE increases Y by 58.21 units.

RMSE is computed for this model with the help of ChatGPT.

```{r}
#First predict using the model
lm_dose_pred <- predict(lm_dose, new_data = data_final)%>%
  bind_cols(data_final) #adds teh predicted values to the same dataframe

lm_dose_pred

#Calculate RMSE
rmse_lm_dose <- lm_dose_pred %>%
  yardstick::rmse(truth = Y, estimate = .pred)

#Calculate R-squared
rsq_lm_dose <- lm_dose_pred %>% 
  yardstick::rsq(truth = Y, estimate = .pred)


metrics_lm_dose <- tibble(
                        Metric = c ("rmse_lm_dose", "rsq_lm_dose"),
                        Value = c(rmse_lm_dose$.estimate, rsq_lm_dose$.estimate))
metrics_lm_dose

```
The RMSE is 666.46 and R-squared is approximately 0.52 for the model containing only dose as the predictor of Y.


Next, a linear model is fitted to the continuous outcome (Y) using the all predictors with the help of the website https://www.tidymodels.org/start/models/ recommended in the class. 

```{r}
#using linear regression function from tidymodels to regress Y on DOSE
#The default for linear_reg() is "lm" for OLS
lm_all <- linear_reg() %>% set_engine("lm") %>% fit(Y ~ DOSE + AGE +SEX + RACE + WT + HT, data = data_final)

#Using tidy for better format of the result table
tidy(lm_all)

```
The estimates suggests, controlling for the effects of other variables, there is a positive relationship of Y with each of DOSE and AGE and a negative relation with each of WT and HT. Holding all other variables constant, Y is expected to decrease for a change in SEX variable from 1 to 2 and Y is expected to increase for a change in RACE variable from 1 to 2.   

RMSE is computed for this model with the help of ChatGPT.

```{r}
#First predict using the model
lm_all_pred <- predict(lm_all, new_data = data_final)%>%
  bind_cols(data_final) #adds the predicted values to the same dataframe

lm_all_pred

#Calculate RMSE
rmse_lm_all <- lm_all_pred %>%
  yardstick::rmse(truth = Y, estimate = .pred)

#Calculate R-squared
rsq_lm_all <- lm_all_pred %>% 
  yardstick::rsq(truth = Y, estimate = .pred)


metrics_lm_all <- tibble(
                        Metric = c ("rmse_lm_all", "rsq_lm_all"),
                        Value = c(rmse_lm_all$.estimate, rsq_lm_all$.estimate))
metrics_lm_all

```
RMSE measures the average difference between the predicted values from the model and the actual values in the data. A lower RMSE value indicates a better fit to the data. Contrarily, a higher R-squared value is indicative of a model explaining a greater proportion of variance in the dependent variable. Higher R-squared values indicate a model's stronger explanatory power. Comparing the two linear models, the second model has a lower RMSE value of 590.85 compared to 666 of the first model. The R-squared is higher at 0.62 for the second model compared to 0.52 of the first model. This indicates that the linear model containing all predictor variables outperforms the one containing only DOSE in both metrics.

The interpretation should be made with caution and should be contextualized within the analysis domain, the specific scales of the variables involved, and the potential for multicollinearity among predictors. For example, the scatter plot pairwise matrix suggests a high correlation between HT and WT indicating redundancy in the predictors. Adding more predictors can artificially inflate the R-square  without necessarily improving the model's predictiveness. As R-squared does not penalize for the inclusion of correlated predictors, it can lead to overestimating the model's explanatory power.


**Logistic Models**

Next, logistic model is fitted for the categorical variable SEX with Dose as the predictor. ROC-AUC and Accuracy are also computed for this model.

```{r}

# Prepare the data: Split into training and testing sets
set.seed(123) #for reproducibility
data_split <- initial_split(data_final, prop = 0.80) #80% of the data set as training data
train_data <- training(data_split)
test_data <- testing(data_split)

# Defining the logistic regression model specification
logistic_spec <- logistic_reg() %>%
  set_engine("glm") %>%
  set_mode("classification")

# Fitting the model to the training data
logistic_fit_dose <- logistic_spec %>%
  fit(SEX ~ DOSE, data = train_data)
tidy(logistic_fit_dose)

# Predicting on the test data
predictions_dose <- predict(logistic_fit_dose, new_data = test_data, type = "prob")

# Adding the predicted probabilities back to the test set for evaluation
test_data <- bind_cols(test_data, predictions_dose)
test_data

# Calculating ROC AUC and Accuracy
# SEX is a factor with levels "1" and "2", and the interest is in the level "1" predictions
roc_auc_dose <- roc_auc(test_data, truth = SEX, .pred_1)

test_data <- test_data %>%
  mutate(predicted_class = if_else(.pred_1 > 0.5, '1', '2'),
         predicted_class = factor(predicted_class, levels = levels(SEX)))

# Now calculate accuracy
accuracy_dose <- accuracy(test_data, truth = SEX, estimate = predicted_class)

# Create a tibble to hold the metrics
metrics_table <- tibble(
  Metric = c("ROC AUC", "Accuracy"),
  Value = c(roc_auc_dose$.estimate, accuracy_dose$.estimate) # Extract the metric values
)
metrics_table
```
With the assumption that  R treats the first level of a factor ('1' in this case) as the reference category in logistic regression, the above estimate suggests a negative association of DOSE with the probability of SEX being 2. 

The capacity of this model to distinguish between SEX levels based on DOSE is 0.5 which indicates an ability same as random guessing. The accuracy is 0.92, which suggests this model has predicted 92% of the SEX correctly.  

Next, logistic model is fitted for the categorical variable SEX using all the predictors. 

```{r}
#| warning: false
# Preparing the data by splitting into training and testing sets
set.seed(123) #for reproducibility
data_split <- initial_split(data_final, prop = 0.80)
train_data <- training(data_split)
test_data <- testing(data_split)

# Defining the logistic regression model specification
logistic_spec <- logistic_reg() %>%
  set_engine("glm") %>%
  set_mode("classification")

# Fitting the model to the training data
logistic_fit_all <- logistic_spec %>%
  fit(SEX ~ Y + DOSE + AGE + RACE + WT + HT, data = train_data)

tidy(logistic_fit_all)

# Predicting on the test data
predictions <- predict(logistic_fit_all, new_data = test_data, type = "prob")


# Adding the predicted probabilities back to the test set for evaluation
test_data <- bind_cols(test_data, predictions)


# Calculating ROC AUC and Accuracy
# SEX is a factor with levels "1" and "2", and the interest is in the level "1" predictions
roc_auc_all <- roc_auc(test_data, truth = SEX, .pred_1)

test_data <- test_data %>%
  mutate(predicted_class = if_else(.pred_1 > 0.5, '1', '2'),
         predicted_class = factor(predicted_class, levels = levels(SEX)))

# Calculating accuracy
accuracy_all <- accuracy(test_data, truth = SEX, estimate = predicted_class)

# Creating a tibble to hold the metrics
metrics_table <- tibble(
  Metric = c("ROC AUC", "Accuracy"),
  Value = c(roc_auc_all$.estimate, accuracy_all$.estimate) # Extract the metric values
)
metrics_table

```
With the assumption that  R treats the first level of a factor ('1' in this case) as the reference category in logistic regression, the above estimate suggests each of the numerical predictors, keeping other variables constant, has a negative association with the probability of SEX being 2 except for AGE. Compared to RACE1, the probability of SEX being 2 decrease for RACE2. 

The second model has a higher ROC-AUC (0.95) compared to the first model (0.50) suggesting that the second model is comparatively better in distinguishing SEX levels. On the other hand, this model has a slightly lower accuracy (0.875) compared to the first model (0.917). Considering both these metrics, the second model containing all predictor variables is a better choice. 



